class Solution {
    public int[] twoSum(int[] nums, int target) {
        int arryLength = nums.length;
        for(int i = 0; i < arryLength - 1; i++ ){
            for(int j = i+1; j < arryLength; j++){
                if( nums[i] + nums[j] == target){
                    return new int[] {i, j};
                }
            }

        }
        return new int[]{};
    }

  public int[] twoSumOpt(int[] nums, int target) {
        HashMap<Integer, Integer> stateHolder = new HashMap<Integer, Integer>();
        int length = nums.length;

        for(int i = 0; i < length; i++){
            if(stateHolder.containsKey(target - nums[i])){
                return new int[] { stateHolder.get(target - nums[i]), i};
            }
            stateHolder.put(nums[i], i);
        }
        return new int[]{};
    }
}
